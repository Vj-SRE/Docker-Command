A Secret is an object that contains a small amount of sensitive data such as a password, a token, 
or a key. Such information might otherwise be put in a Pod specification or in a container image. 
Using a Secret means that you don't need to include confidential data in your application code.

Because Secrets can be created independently of the Pods that use them, there is less risk of the Secret (and its data) 
being exposed during the workflow of creating, viewing, and editing Pods. Kubernetes, and applications that run in your cluster,
can also take additional precautions with Secrets, such as avoiding writing sensitive data to nonvolatile storage.

Two methods 

1. Create Secrets 
2. Inject Secrets 

Commands: 
kubectl create secret generic
  secretname --from-literal=key1=value1
             --from-literal=key2=value2

kubectl create secret generic
  secretname --from-file=location of file



Kubectl create -f 

=================================================
enc.yaml
apiVersion: v1
kind: Secret
metadata:
 name: 
data: 
 key1: value1
 key2: value2

How to convert value in encoded 
echo -n 'value1' | base64   for decoding echo -n 'value1' | base64 --decode

kubectl get secrets 
======================================
For injecting the secrets to the pod please refer the notes 

======================================
Note: Anyone can view the value given in secret using kubectl get secrert sercret_name -o yaml and decode that using base64 or the secret data is clearly visible in etcd 
using below authentication method ETCDCTL_API=3 etcdctl \
   --cacert=/etc/kubernetes/pki/etcd/ca.crt   \
   --cert=/etc/kubernetes/pki/etcd/server.crt \
   --key=/etc/kubernetes/pki/etcd/server.key  \
   get /registry/secrets/default/secret1 | hexdump -C

Then how we can Encrypting Confidential Data at Rest ?? 


We can validate first the encryption at rest is enabled or not using below 
ps -ef |grep kube-api |grep "encryption-provider-config" or we can check the same parameter is avilable in  /etc/kubernetes/manifest/kube-api-server.yaml or not 

We can use head -c 32 /dev/urandom | base64 to Generate a 32-byte random key and base64 encode it. We can use this value in a yaml file while creating EncryptionConfiguration.

=======================================================================

apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
      - secrets       # the resource name we need to Encrypt data in etcd
    providers:        #Diffrent methods are avilable we can use anyone of that
      - aescbc:
          keys:
            - name: key1
              # See the following text for more details about the secret value
              secret: <BASE 64 ENCODED SECRET>                                  #We will keep the value here random value (head -c 32 /dev/urandom | base64)
      - identity: {} # this fallback allows reading unencrypted secrets;
                     # for example, during initial migration

After that we will copy our enc.yaml in /etc/kubernetes/enc/enc.yaml and we will mention the same lines in kube-apiserver.yaml file using 
- --encryption-provider-config=/etc/kubernetes/enc/enc.yaml parameters and we can add below volumes in kube-apiserver.yaml also

volumeMounts:
    ...
    - name: enc                           # add this line
      mountPath: /etc/kubernetes/enc      # add this line
      readOnly: true                      # add this line

volumes:                                                            #we are mapping local directory inside the pod 
  ...
  - name: enc                             # add this line
    hostPath:                             # add this line
      path: /etc/kubernetes/enc           # add this line
      type: DirectoryOrCreate             # add this line    


VVI : After encryption data at rest newly created secrets are only encrypted in etcd. The old one is not encrypted that you created before.
Note: Then run the following command to force decryption of all Secrets:

kubectl get secrets --all-namespaces -o json | kubectl replace -f -





