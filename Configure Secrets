A Secret is an object that contains a small amount of sensitive data such as a password, a token, 
or a key. Such information might otherwise be put in a Pod specification or in a container image. 
Using a Secret means that you don't need to include confidential data in your application code.

Because Secrets can be created independently of the Pods that use them, there is less risk of the Secret (and its data) 
being exposed during the workflow of creating, viewing, and editing Pods. Kubernetes, and applications that run in your cluster,
can also take additional precautions with Secrets, such as avoiding writing sensitive data to nonvolatile storage.

Two methods 

1. Create Secrets 
2. Inject Secrets 

Commands: 
kubectl create secret generic
  secretname --from-literal=key1=value1
             --from-literal=key2=value2

kubectl create secret generic
  secretname --from-file=location of file



Kubectl create -f 

=================================================

apiVersion: v1
kind: Secret
metadata:
 name: 
data: 
 key1: value1
 key2: value2

How to convert value in encoded 
echo -n 'value1' | base64   for decoding echo -n 'value1' | base64 --decode

kubectl get secrets 

======================================


