Configmaps: A ConfigMap is an API object used to store non-confidential data in key-value pairs. 
Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume.

1. Create the config maps 
2. Inject to the pod

Creating a configmap :
Kubectl create configmap \
  Config_name --from-literal=key=value
              --from-literal=key=value \
              --from-literal=key=value
or 
Kubectl create configmap \
  Config_name --from-file=location of file

kubectl create -f 

kubectl get configmap
kubectl describe configmap configmap_name 

====================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: app_config
data:
  Key1: value1
  key2: value2

======================================

Injecting :

apiVersion: v1
kind: Pod
metadata:
  name: env-configmap
spec:
  containers:
    - name: app
      command: ["/bin/sh", "-c", "printenv"]
      image: busybox:latest
      envFrom:
        - configMapRef:
            name: myconfigmap
================================================
Here we are using some values from configmaps

apiVersion: v1
kind: Pod
metadata:
  name: env-configmap
spec:
  containers:
  - name: envars-test-container
    image: nginx
    env:
    - name: CONFIGMAP_USERNAME
      valueFrom:
        configMapKeyRef:
          name: myconfigmap
          key: username
 
